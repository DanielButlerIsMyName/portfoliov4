apiVersion: apps/v1
kind: Deployment
metadata:
  name: phoenix-app
  labels:
    app: phoenix-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: phoenix-app
  template:
    metadata:
      labels:
        app: phoenix-app
    spec:
      containers:
        - name: phoenix-container
          image: ghcr.io/danielbutlerismyname/portfoliov4:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 4000
          env:
            - name: DATABASE_URL
              value: "ecto://postgres:postgres@postgres:5432/portfoliov4_prod"
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: phoenix-secrets
                  key: secret_key_base
            - name: PHX_HOST
              value: "37.156.41.23"
            - name: PORT
              value: "4000"
          # Optional: Add health checks
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 4000
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 4000
          #   initialDelaySeconds: 5
          #   periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: phoenix-service
spec:
  selector:
    app: phoenix-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: phoenix-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - 37.156.41.23
      secretName: phoenix-tls
  rules:
    - host: 37.156.41.23
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: phoenix-service
                port:
                  number: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: phoenix-secrets
type: Opaque
stringData:
  secret_key_base: "QKdqV7HSTcVQzwOu7sl9v3CIvpCLDQdaSc5TzJGccNL13ABGUIsRLkyOiSzSN9gu"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: password
            - name: POSTGRES_DB
              value: "portfoliov4_prod"
          volumeMounts:
            - name: postgres-pv
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-pv
          persistentVolumeClaim:
            claimName: postgres-pvc

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
type: Opaque
stringData:
  password: "postgres"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
